plugins {
    id 'java-library' 
    id "fr.il_totore.manadrop" version "0.4.1-SNAPSHOT"
}

version = project.mod_version
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'CustomPlayerModels-Bukkit'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

repositories {
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
    	url "https://libraries.minecraft.net"
    }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT"
    compileOnly "io.netty:netty-all:4.1.25.Final"
    compileOnly "com.mojang:brigadier:1.0.18"
    compileOnly "dev.jorel:commandapi-bukkit-core:9.4.1"
}

sourceSets {
	main {
		java {
			srcDir "../CustomPlayerModels/src/shared/java"
		}
		resources {
			srcDir "../CustomPlayerModels/src/shared/resources"
		}
	}
}

spigot {
    desc {
        named 'CustomizablePlayerModels' //Default: the project name
        version project.version //Default: the project version
        authors 'tom5454'
        main 'com.tom.cpm.bukkit.CPMBukkitPlugin'
        description 'Customizable Player Models server-side plugin.'
        website 'https://github.com/tom5454/CustomPlayerModels'
        apiVersion '1.13'
        command {
        	named 'cpm'
            description 'Customizable Player Models command'
            usage '/<command> <subcommands>'
            permission 'cpm.command'
        }
        permission {
        	named 'cpm.*'
        	child {
        		named 'cpm.command'
                inherit true
        	}
        }
        permission {
            named 'cpm.command'
            description 'access to cpm command'
            defaultType 'grant_op'
        }
    }
}

processResources.finalizedBy(spigotPlugin)

java {
	withSourcesJar()
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": project.name,
            "Specification-Vendor": "tom5454",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" : "tom5454",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
