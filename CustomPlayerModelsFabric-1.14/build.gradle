plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'mcp-hybrid-loom' version '1.0.0'
	id 'maven-publish'
}

repositories {
maven { url 'https://jitpack.io' }
maven { url "https://maven.shedaniel.me/" }
maven { url "https://maven.terraformersmc.com/releases/"}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings mcphl.mappings()
	//mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2" 
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation("io.github.prospector:modmenu:1.7.17+build.1") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	
    modImplementation ('com.github.Virtuoel:Pehkui:3.2.0'){
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom {
	accessWidenerPath = file("src/main/resources/cpm.accesswidener")
}

sourceSets {
	main {
		java {
			srcDir "../CustomPlayerModels/src/shared/java"
			srcDir "../CustomPlayerModels-1.14/src/platform-shared/java"
		}
		resources {
			srcDir "../CustomPlayerModels/src/shared/resources"
			srcDir "../CustomPlayerModels-1.14/src/platform-shared/resources"
			exclude "**/*.lang"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
